@designate_heir_cost = 0
# Set one of your children as heir



#This interaction is referenced in code! If it's renamed you have to ping a coder
designate_heir_interaction = {

	category = interaction_category_diplomacy

	desc = designate_heir_interaction_desc

	is_shown = {
		scope:recipient = {
			is_child_of = scope:actor
		}
		scope:actor = {
			can_designate_heir_trigger = yes
		}
		NOT = {
			scope:recipient = scope:actor.designated_heir
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = { is_diplomatically_available = yes }
		scope:actor = { prestige >= @designate_heir_cost }
	}

	on_auto_accept = {
		scope:recipient = {
			trigger_event = char_interaction.0120
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = designate_heir_interaction_notification

				left_icon = scope:actor					
				right_icon = scope:recipient

				set_designated_heir = scope:recipient
				add_prestige = { subtract = @designate_heir_cost }
			}
		}
	}

	auto_accept = yes
}

### Signal interest to be a title successor by adding a claim on it
roman_administration_get_claim = {
	category = interaction_category_roman_administration
	common_interaction = yes
	
	use_diplomatic_range = yes

	is_shown = {
		scope:actor = {
			NOT = {
				any_held_title = {
					this = title:e_byzantium
				}
			}			
			top_liege = {
				any_held_title = {
					this = title:e_byzantium
				}
			}
			NOT = { has_government = theocracy_government }
		}
		scope:recipient = { 
			is_landed = yes 
			top_liege = {
				any_held_title = {
					OR = {
						this = title:e_byzantium
						this = title:e_roman_empire
					}
				}
			}
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}
			NOT = { this = scope:actor }
		}
	}
	
	auto_accept = yes
	
	on_accept = {
		scope:actor = {
			add_unpressed_claim = scope:recipient.primary_title

			## Cost for bribes
			if = {
				limit = {
					scope:recipient.primary_title = {
						roman_administration_is_a_tagma_title_trigger = yes
					}
				}
				remove_short_term_gold = 50
			}
			else = {
				remove_short_term_gold = 25
			}
			## Add the stress impact
			am_introverted = minor_stress_impact_gain
			am_fearful = minor_stress_impact_gain
		}
	}

	# AI
	ai_targets = {
		ai_recipients = peer_vassals
	}
	ai_frequency = 6

	# ai_potential = {
		
	# }

	ai_will_do = {
		base = 100
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}

		modifier = {
			factor = 0
			scope:actor = {
				gold < 50
			}
		}

		modifier = {
			factor = 0
			scope:actor = {
				any_heir_to_title = {
					tier = tier_duchy
				}
			}
		}

		modifier = {
			factor = 100
			scope:secondary_recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}

		modifier = {
			factor = 1000
			scope:secondary_recipient = {
				is_close_family_of = scope:actor
			}
		}
	}
}

roman_administration_favour_successor = {
	category = interaction_category_roman_administration
	common_interaction = yes

	use_diplomatic_range = yes
	# target_type = title
	# target_filter = secondary_recipient_domain_titles	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			any_held_title = {
				this = title:e_byzantium
			}			
		}
		scope:recipient = { 
			top_liege = {
				any_held_title = {
					OR = {
						this = title:e_byzantium
						this = title:e_roman_empire
					}
				}
			}
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}		
		}
	}

	populate_recipient_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					top_liege = scope:actor
					is_female = no
					age >= 18
					#roman_administration_holds_military_title_trigger = no
					highest_held_title_tier < tier_duchy
					NOT = {
						has_government = theocracy_government
					}
				}
				add_to_list = characters
			}
			every_vassal = {
				limit = {
					top_liege = scope:actor
					is_female = no
					age >= 18
					#roman_administration_holds_military_title_trigger = no
					highest_held_title_tier < tier_duchy
					NOT = {
						has_government = theocracy_government
					}
				}
				add_to_list = characters

				every_courtier = {
					limit = {
						top_liege = scope:actor
						is_female = no
						age >= 18
						#roman_administration_holds_military_title_trigger = no
						highest_held_title_tier < tier_duchy
						NOT = {
							has_government = theocracy_government
						}
					}
					add_to_list = characters
				}
			}
			every_vassal = {
				every_courtier = {
					limit = {
						top_liege = scope:actor
						is_female = no
						age >= 18
						#roman_administration_holds_military_title_trigger = no
						highest_held_title_tier < tier_duchy
						NOT = {
							has_government = theocracy_government
						}
					}
					add_to_list = characters
				}
			}
		}
	}

	# can_be_picked_title = {
	# 	scope:target = {
	# 		roman_administration_is_a_tagma_title_trigger = yes
	# 	}
	# }
	
	on_accept = {
		scope:secondary_recipient = {
			add_unpressed_claim = scope:recipient.primary_title
			## Add some flag so it has a better score in the election
			add_character_modifier = roman_administration_emperor_favourite
			add_opinion = {
				target = scope:actor
				modifier = roman_administration_favoured_me
				opinion = 25
			}
		}
	}

	ai_potential = {
		#is_at_war = no
	}
	
	ai_targets = {
		ai_recipients = vassals
	}
	ai_frequency = 6
	
	ai_will_do = {
		base = 100
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}

		modifier = {
			factor = 100
			scope:secondary_recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

roman_administration_fire_bureaucrat = {
	category = interaction_category_roman_administration

	use_diplomatic_range = yes

	is_shown = {
		scope:actor = {
			any_held_title = {
				this = title:e_byzantium
			}		
		}
		scope:recipient = { 
			top_liege = scope:actor
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}
		}
	}

	auto_accept = yes
	
	ai_potential = {
		is_at_war = no
		NOR = {
			has_trait = am_agreeable
			has_trait = am_tolerant
			has_trait = am_patient
			has_trait = am_mild
			has_trait = am_gentle
		}
	}

	on_accept = {
		scope:recipient = {
			## Give title to successor
			primary_title = {
				current_heir = {
					save_scope_as = title_heir
				}
			}
			## Start giving a county to stick the transfer
			scope:recipient.capital_county = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = yes
				}
				save_temporary_scope_as = title_to_inherit
				change_title_holder = {
					holder = scope:title_heir
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
			resolve_title_and_vassal_change = scope:change

			## hand out the rest
			primary_title = {
				## Handing out de jure counties
				every_in_de_jure_hierarchy = {
					limit = {
						tier <= tier_county
						NOT = { 
							this = { has_title_law = ave_maria_roman_administration_family_succession_law }
							has_title_law = ave_maria_roman_administration_family_succession_law							
							holder = {
								roman_administration_holds_military_title_trigger = yes
							}
						}
						NOT = { 
							holder = {
								primary_title = { this = title:e_byzantium }
							}
						}
						holder = {
							top_liege = {
								primary_title = { this = title:e_byzantium }
							}
						}
					}
					if = {
						limit = {
							exists = holder
						}
						create_title_and_vassal_change = {
							type = granted
							save_scope_as = change
							add_claim_on_loss = yes
						}
						save_temporary_scope_as = title_to_inherit
						change_title_holder = {
							holder = scope:title_heir
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change

				## Handing out ducal title
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = yes
				}
				save_temporary_scope_as = title_to_inherit
				# current_heir = {
				# 	save_scope_as = title_heir
				# }
				change_title_holder = {
					holder = scope:title_heir
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				
			}

			## Handing back out non dejure title you might have and that belong to the next in line
			every_held_title = {
				limit = {
					tier = tier_county
					NOT = { 
						this = { has_title_law = ave_maria_roman_administration_family_succession_law } 
						de_jure_liege = { this = title:scope:title }
						de_jure_liege.holder = {
							this = root
						}
					}					
				}
				de_jure_liege.holder = {
					save_scope_as = title_heir
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = yes
				}
				change_title_holder = {
					holder = scope:title_heir
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}

			resolve_title_and_vassal_change = scope:change
			
			add_opinion = {
				target = scope:actor
				modifier = roman_administration_fired_me
				opinion = -25
			}

			## Clear variable and modifiers
			hidden_effect = {
				remove_character_modifier = roman_administration_terms_of_office_0
				remove_character_modifier = roman_administration_terms_of_office_1
				remove_character_modifier = roman_administration_terms_of_office_2
				remove_character_modifier = roman_administration_terms_of_office_3
				remove_character_modifier = roman_administration_terms_of_office_4
				remove_character_modifier = roman_administration_terms_of_office_5
				remove_variable = roman_administration_term_count
			}
		}

		scope:actor = {
			add_tyranny = 5

			## Add the stress impact
			am_introverted = minor_stress_impact_gain
			am_fearful = minor_stress_impact_gain
			am_sentimental = minor_stress_impact_gain
			am_craven = minor_stress_impact_gain
			am_faithful = minor_stress_impact_gain
			am_honest = minor_stress_impact_gain

			am_intolerant = minor_stress_impact_loss
			am_inconstant = minor_stress_impact_loss
		}
	}

	ai_targets = {
		ai_recipients = vassals
		max = 20
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
				}
			}
		}
		
		modifier = {
			add = 100
			scope:recipient = {
				is_primary_heir_of = scope:actor
				OR = {
					has_trait = inbred
					has_trait = intellect_bad_3
					has_trait = incapable
				}
			}
		}
		
		modifier = {
			add = 5
			ai_vengefulness >= medium_positive_ai_value
			scope:recipient = {
				is_heir_of = scope:actor
			}
			OR = {
				AND = {
					scope:recipient = {
						has_trait = incestuous
					}
					NOT = { is_incestuous_trigger = yes }
					trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = kinslayer
					}
					NOT = { has_trait = kinslayer }
				}
				AND = {
					scope:recipient = {
						has_trait = adulterer
					}
					NOR = {
						has_trait = adulterer
						has_trait = fornicator
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = fornicator
					}
					NOR = {
						has_trait = adulterer
						has_trait = fornicator
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = deviant
					}
					NOT = {
						is_deviant_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = witch
					}
					NOT = {
						is_witch_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = sodomite
					}
					NOR = {
						has_trait = sodomite
						any_secret = {
							secret_type = secret_homosexual
						}
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = cannibal
					}
					NOT = {
						is_cannibal_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				is_ai = no
			}
		}
	}
}

roman_administration_replace_bureaucrat = {
	category = interaction_category_roman_administration

	use_diplomatic_range = yes
	# target_type = title
	# target_filter = secondary_recipient_domain_titles	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			any_held_title = {
				this = title:e_byzantium
			}		
		}
		scope:recipient = { 
			top_liege = scope:actor
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}
		}
	}

	populate_recipient_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					top_liege = scope:actor
					is_female = no
					age >= 18
					#roman_administration_holds_military_title_trigger = no
					highest_held_title_tier < tier_duchy
					NOT = {
						has_government = theocracy_government
					}
				}
				add_to_list = characters
			}
			every_vassal = {
				limit = {
					top_liege = scope:actor
					is_female = no
					age >= 18
					#roman_administration_holds_military_title_trigger = no
					highest_held_title_tier < tier_duchy
					NOT = {
						has_government = theocracy_government
					}
				}
				add_to_list = characters

				every_courtier = {
					limit = {
						top_liege = scope:actor
						is_female = no
						age >= 18
						#roman_administration_holds_military_title_trigger = no
						highest_held_title_tier < tier_duchy
						NOT = {
							has_government = theocracy_government
						}
					}
					add_to_list = characters
				}
			}
			every_vassal = {
				every_courtier = {
					limit = {
						top_liege = scope:actor
						is_female = no
						age >= 18
						#roman_administration_holds_military_title_trigger = no
						highest_held_title_tier < tier_duchy
						NOT = {
							has_government = theocracy_government
						}
					}
					add_to_list = characters
				}
			}
		}
	}

	# can_be_picked_title = {
	# 	scope:target = {
	# 		roman_administration_is_a_tagma_title_trigger = yes
	# 	}
	# }
	
	on_accept = {
		scope:recipient = {
			## Give title to emperor's choice
			scope:secondary_recipient = {
				save_scope_as = title_heir
			}
			## Start giving a county to stick the transfer
			scope:recipient.capital_county = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = yes
				}
				save_temporary_scope_as = title_to_inherit
				change_title_holder = {
					holder = scope:title_heir
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change

			## hand out the rest
			primary_title = {
				## Handing out de jure counties
				every_in_de_jure_hierarchy = {
					limit = {
						tier <= tier_county
						NOT = { 
							this = { has_title_law = ave_maria_roman_administration_family_succession_law }
							has_title_law = ave_maria_roman_administration_family_succession_law							
							holder = {
								roman_administration_holds_military_title_trigger = yes
							}
						}
						NOT = { 
							holder = {
								primary_title = { this = title:e_byzantium }
							}
						}
					}
					if = {
						limit = {
							exists = holder
						}
						create_title_and_vassal_change = {
							type = granted
							save_scope_as = change
							add_claim_on_loss = yes
						}
						save_temporary_scope_as = title_to_inherit
						change_title_holder = {
							holder = scope:title_heir
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change

				## Handing out ducal title
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = yes
				}
				save_temporary_scope_as = title_to_inherit
				# current_heir = {
				# 	save_scope_as = title_heir
				# }
				change_title_holder = {
					holder = scope:title_heir
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				
			}
			resolve_title_and_vassal_change = scope:change
			
			add_opinion = {
				target = scope:actor
				modifier = roman_administration_fired_me
				opinion = -25
			}

			## Clear variable and modifiers
			hidden_effect = {
				remove_character_modifier = roman_administration_terms_of_office_0
				remove_character_modifier = roman_administration_terms_of_office_1
				remove_character_modifier = roman_administration_terms_of_office_2
				remove_character_modifier = roman_administration_terms_of_office_3
				remove_character_modifier = roman_administration_terms_of_office_4
				remove_character_modifier = roman_administration_terms_of_office_5
				remove_variable = roman_administration_term_count
			}

			## Add some opinion
			scope:secondary_recipient = {
				add_opinion = {
					target = scope:actor
					modifier = roman_administration_favoured_me
					opinion = 25
				}
			}			
		}

		scope:actor = {
			add_tyranny = 5

			## Add the stress impact
			am_introverted = minor_stress_impact_gain
			am_fearful = minor_stress_impact_gain
			am_sentimental = minor_stress_impact_gain
			am_craven = minor_stress_impact_gain
			am_faithful = minor_stress_impact_gain
			am_honest = minor_stress_impact_gain

			am_intolerant = minor_stress_impact_loss
			am_inconstant = minor_stress_impact_loss
		}
	}

	ai_potential = {
		#is_at_war = no
	}
	
	ai_targets = {
		ai_recipients = vassals
	}
	ai_frequency = 6
	
	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
				}
			}
		}
		
		modifier = {
			add = 100
			scope:recipient = {
				is_primary_heir_of = scope:actor
				OR = {
					has_trait = inbred
					has_trait = intellect_bad_3
					has_trait = incapable
				}
			}
		}
		
		modifier = {
			add = 5
			ai_vengefulness >= medium_positive_ai_value
			scope:recipient = {
				is_heir_of = scope:actor
			}
			OR = {
				AND = {
					scope:recipient = {
						has_trait = incestuous
					}
					NOT = { is_incestuous_trigger = yes }
					trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = kinslayer
					}
					NOT = { has_trait = kinslayer }
				}
				AND = {
					scope:recipient = {
						has_trait = adulterer
					}
					NOR = {
						has_trait = adulterer
						has_trait = fornicator
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = fornicator
					}
					NOR = {
						has_trait = adulterer
						has_trait = fornicator
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = deviant
					}
					NOT = {
						is_deviant_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = witch
					}
					NOT = {
						is_witch_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = sodomite
					}
					NOR = {
						has_trait = sodomite
						any_secret = {
							secret_type = secret_homosexual
						}
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
				AND = {
					scope:recipient = {
						has_trait = cannibal
					}
					NOT = {
						is_cannibal_trigger = yes
					}
					trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = scope:actor.faith GENDER_CHARACTER = scope:recipient }
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				is_ai = no
			}
		}
	}
}

roman_administration_favour_family_member = {
	category = interaction_category_roman_administration

	use_diplomatic_range = yes
	# target_type = title
	# target_filter = secondary_recipient_domain_titles	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			top_liege = {
				any_held_title = {
					OR = {
						this = title:e_byzantium
						this = title:e_roman_empire
					}
				}
			}
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}
		}
		scope:recipient = { 
			top_liege = {
				any_held_title = {
					OR = {
						this = title:e_byzantium
						this = title:e_roman_empire
					}
				}
			}
			highest_held_title_tier = tier_duchy 
			OR = {
				has_government = roman_administration_military_government
				has_government = roman_administration_civilian_government
			}		
		}
	}

	populate_recipient_list = {
		scope:actor = {
			every_close_family_member = {
				if = {
					limit = {
						is_landed = no
						age >= 20
						is_female = no
						NOR = { 
							has_trait = devoted 
							has_trait = blind
							has_trait = eunuch
						}
						NOT = {
							has_government = theocracy_government
						}
					}
					add_to_list = characters
				}				
			}
		}
	}
	
	on_accept = {
		scope:secondary_recipient = {
			add_unpressed_claim = scope:recipient.primary_title
			## Add some flag so it has a better score in the election
			add_opinion = {
				target = scope:actor
				modifier = roman_administration_favoured_me
				opinion = 10
			}
		}
		## Cost for bribes
		if = {
			limit = {
				scope:recipient.primary_title = {
					roman_administration_is_a_tagma_title_trigger = yes
				}
			}
			remove_short_term_gold = 50
		}
		else = {
			remove_short_term_gold = 25
		}
	}

	ai_potential = {
		#is_at_war = no
	}
	
	ai_targets = {
		ai_recipients = peer_vassals
	}
	ai_frequency = 6
	
	ai_will_do = {
		base = 100
		
		modifier = {
			factor = 0
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}

		modifier = {
			factor = 0
			scope:actor = {
				gold < 50
			}
		}

		modifier = {
			factor = 0
			scope:secondary_recipient = {
				any_heir_to_title = {
					tier = tier_duchy
				}
			}
		}

		modifier = {
			factor = 100
			scope:secondary_recipient = {
				OR = {
					AND = {
						scope:actor = {
							ai_greed <= high_positive_ai_value
						}
						has_relation_friend = scope:actor
					}
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}

		modifier = {
			factor = 1000
			scope:secondary_recipient = {
				is_close_family_of = scope:actor
			}
		}
	}
}