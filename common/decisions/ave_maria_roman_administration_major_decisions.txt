########################################################################################
#                                         											   #
# AVE MARIA decisions																   #
# A Very Extensive Modification for Appropriate Realism and Improved Authenticity	   #
#                                         											   #
# Roman Administration Decisions						                        	   #
#                               													   #
########################################################################################

## Written by Atreides

# Be crowned basileus
ave_maria_roman_administration_imperial_coronation_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_imperial_coronation.dds"
	major = yes
	desc = ave_maria_roman_administration_imperial_coronation_decision_desc

	ai_check_interval = 6

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
		NOT = {
			has_trait = basileus  
			has_character_flag = imperial_coronation_started_preparations
		}
	}

	is_valid = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
		NOT = {
			has_character_flag = imperial_coronation_started_preparations
		}
	}

	cost = {
		# add_gold = -150
	}

	effect = {
		custom_tooltip = ave_maria_roman_administration_imperial_coronation_decision_tooltip
		# trigger_event = ave_maria_roman_administration_events.0003
		save_scope_as = actor
		
		capital_province = {
			spawn_activity = {
				type = activity_roman_administration_imperial_coronation
				owner = root
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

## Name a Junior emperor
## Only if already has the trait basileus can you use this Junior emperor ceremony
ave_maria_roman_administration_junior_emperor_coronation_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_imperial_coronation.dds"
	desc = ave_maria_roman_administration_junior_emperor_coronation_decision_desc
	major = yes
	ai_check_interval = 12

	is_shown = {
		is_landed = yes
		is_independent_ruler = yes
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
		has_trait = basileus
		any_relation = {
			type = junior_emperor
		}
		OR = {
			any_vassal_or_below = {
				any_relation = {
					type = junior_emperor
				}
				NOT = { has_trait = junior_emperor }
			}
			any_courtier = {
				any_relation = {
					type = junior_emperor
				}
				NOT = { has_trait = junior_emperor }
			}
			any_vassal_or_below = {
				any_courtier = {
					any_relation = {
						type = junior_emperor
					}
					NOT = { has_trait = junior_emperor }
				}
			}
		}
		NOT = {
			has_character_flag = imperial_coronation_started_preparations
		}
	}

	is_valid = {	
		is_physically_able_adult = yes
		prestige > 150
	}

	cost = {					
		prestige = 150
		# gold = 300
	}

	effect = {
		save_temporary_scope_as = roman_administration_emperor
		random_relation = {
			limit = {
				type = junior_emperor
			}
			save_temporary_scope_as = roman_administration_emperor_heir
		}
		capital_province = {
			spawn_activity = {
				type = activity_roman_administration_imperial_coronation
				owner = root
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
	
	ai_priority = 100
}

## Decision for the emperor to call all the tagma at once instead of manually selecting each of them
ave_maria_roman_administration_muster_all_the_tagma_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_muster_all_the_tagma.dds"
	major = yes
	desc = ave_maria_roman_administration_muster_all_the_tagma_decision_desc

	ai_check_interval = 6

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
		is_at_war = yes
		NOT = { 
			any_vassal_or_below = {
				any_held_title = {
					roman_administration_is_a_tagma_title_trigger = yes
				}
				any_war_ally = {
					this = root
				}
				# any_character_war = {
				# 	NOR = {
				# 		is_attacker = PREV
				# 		is_defender = PREV
				# 	}
				# }				
			}
		}
	}

	is_valid = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
		is_at_war = yes
		NOT = { 
			any_vassal_or_below = {
				any_held_title = {
					roman_administration_is_a_tagma_title_trigger = yes
				}
				any_war_ally = {
					this = root
				}
				# any_character_war = {
				# 	NOR = {
				# 		is_attacker = PREV
				# 		is_defender = PREV
				# 	}
				# }				
			}
		}
		# any_vassal_or_below = {
		# 	any_held_title = {
		# 		roman_administration_is_a_tagma_title_trigger = yes
		# 	}
		# 	root = {
		# 		any_character_war = {
		# 			any_war_participant = {
		# 				NOT = { this = PREVPREV }
		# 			}
		# 		}
		# 	}		
		# }
		# NOT = {
		# 	root = {
		# 		every_character_war = {
		# 			any_war_participant = {
		# 				this = {
		# 					any_held_title = {
		# 						roman_administration_is_a_tagma_title_trigger = yes
		# 					}
		# 				}
		# 			}
		# 		}
		# 	}
		# }			
	}

	cost = {
		
	}

	effect = {
		custom_tooltip = ave_maria_roman_administration_muster_all_the_tagma_decision_tooltip
		save_scope_as = actor

		scope:actor = {
			every_character_war = {
				save_scope_as = basileus_war
			}
		}
		every_vassal_or_below = {
			limit = {
				roman_administration_holds_tagma_title_trigger = yes
			}
			save_scope_as = tagma_commander
			scope:actor = {
				every_character_war = {
					limit = {
						primary_attacker = scope:actor
					}
					add_attacker = scope:tagma_commander
				}
				every_character_war = {
					limit = {
						primary_defender = scope:actor
					}
					add_defender = scope:tagma_commander
				}
			}
			# if = {
			# 	limit = {
			# 		#is_at_war_as_attacker = scope:actor
			# 		scope:actor = {
			# 			is_at_war_as_attacker = yes
			# 		}
			# 	}
			# 	scope:actor = {
			# 		every_character_war = {
			# 			limit = {
			# 				primary_attacker = scope:actor
			# 			}
			# 			add_attacker = scope:tagma_commander
			# 		}
			# 	}
			# 	# scope:basileus_war = {
			# 	# 	add_attacker = prev
			# 	# }
			# }
			# else = {
			# 	# scope:basileus_war = {
			# 	# 	add_defender = prev
			# 	# }
			# 	scope:actor = {
			# 		every_character_war = {
			# 			limit = {
			# 				primary_defender = scope:actor
			# 			}
			# 			add_defender = scope:tagma_commander
			# 		}
			# 	}
			# }
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

## Decision to muster the tagma troops in constantinople
ave_maria_roman_administration_muster_tagmatic_troops_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_muster_all_the_tagma.dds"
	major = yes
	desc = ave_maria_roman_administration_muster_tagmatic_troops_decision_desc

	ai_check_interval = 1

	is_shown = {
		roman_administration_holds_tagma_title_trigger = yes
		is_at_war = yes
	}

	is_valid = {
		NOT = { has_character_flag = mustered }
		is_at_war = yes
		liege = {
			is_at_war = yes
		}
	}

	cost = {
		
	}

	effect = {
		custom_tooltip = ave_maria_roman_administration_muster_tagmatic_troops_decision_tooltip
		add_character_flag = mustered
		save_scope_as = actor
		hidden_effect = {
			every_character_war = {
				save_scope_as = war_to_join
			}
		}
		spawn_army = {
			name = "Tagma"
			# levies = 0
			men_at_arms = {
				type = cataphract
				stacks = 25
			}
			# men_at_arms = {
			# 	type = house_guard
			# 	stacks = 25
			# }
			# men_at_arms = {
			# 	type = bowmen
			# 	stacks = 10
			# }
			location = 496
			origin = 496
			save_scope_as = tagma_army
			inheritable = no
			war = scope:war_to_join
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

## Decision to muster tagma troops for provincial military leaders
ave_maria_roman_administration_muster_provincial_troops_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_muster_all_the_tagma.dds"
	major = yes
	desc = ave_maria_roman_administration_muster_provincial_troops_decision_desc

	ai_check_interval = 1

	is_shown = {
		roman_administration_holds_military_title_trigger = yes
		is_at_war = yes
		is_independent_ruler = yes
		NOT = {
			has_character_flag = mustered
		}
	}

	is_valid = {
		is_at_war = yes
		is_independent_ruler = yes
	}

	cost = {
		
	}

	effect = {
		custom_tooltip = ave_maria_roman_administration_muster_tagmatic_troops_decision_tooltip
		add_character_flag = mustered
		hidden_effect = {
			every_character_war = {
				save_scope_as = war_to_join
			}
		}
		spawn_army = {
			name = "Tagma"
			# levies = 0
			men_at_arms = {
				type = cataphract
				stacks = 10
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 10
			}
			men_at_arms = {
				type = bowmen
				stacks = 5
			}
			location = scope:root.capital_province
			origin = scope:root.capital_province
			save_scope_as = tagma_army
			inheritable = no
			war = scope:war_to_join
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

## Decision for the Emperor to give more power to the Senate
ave_maria_roman_administration_give_power_to_the_senate = {
	picture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_senate.dds"
	major = yes
	desc = ave_maria_roman_administration_give_power_to_the_senate_desc

	ai_check_interval = 72

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
	}

	is_valid = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire			
		}
	}

	cost = {
		prestige = 2000
	}

	effect = {
		custom_tooltip = ave_maria_roman_administration_give_power_to_the_senate_decision_tooltip
		save_scope_as = actor
		
		title:e_byzantium = {
			if = {
				limit = {
					OR = {
						has_variable = roman_administration_senate_political_relevance_medium
					}
				}
				remove_variable = roman_administration_senate_political_relevance_medium
			}
			set_variable = {
				name = roman_administration_senate_political_relevance_high
				value = yes
			}
		}
	}
}