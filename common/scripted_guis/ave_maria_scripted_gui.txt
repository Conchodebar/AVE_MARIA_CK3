########################################################################################
#                                         											   #
# AVE MARIA Scripted GUIS															   #
# A Very Extensive Modification for Appropriate Realism and Improved Authenticity	   #
#                                         											   #
# Roman Administration Scripted GUIS                   								   #
#                               													   #
########################################################################################

## Written by Atreides

# TABLE OF CONTENT:

##### 1) FUNCTIONAL SCRIPTED GUI
##### Triggers and effects to open and close new created menus

##### 1) SCRIPTED GUI FOR VARIABLE LIST & OTHERS
##### Triggers and effects to create the various lists related to the institutions


#############################################
# FUNCTIONAL TYPE SCRIPTED GUI				#
#############################################

## Toggle Institution Tab
am_institutions_gui_toggle = {
	scope = character
	
	is_shown = {
		exists = this
		has_variable = am_institutions_gui_toggle
	}

	effect = {
		if = {
			limit = {
				has_variable = am_institutions_gui_toggle
			}
			remove_variable = am_institutions_gui_toggle
		}
		else = {
			set_variable = am_institutions_gui_toggle
		}
	}
}

## Close Institution Tab
am_institutions_gui_close = {
	scope = character
	
	is_shown = {
		exists = this
		always = yes
	}

	effect = {
		remove_variable = am_institutions_gui_toggle
		## probablement remplacer ici une commande pour trouver les leader des institutions (scoper sur le holder de l'empire, ses vassaux/courtier qui ont tel ou tel  character flag et leur retier le flag
		## title:e_byzantium.holder = { random_vassal = { limit { has_variable = army_leader } remove_variable = army_leader } }
	}
}

## Toggle Senate Window
am_institutions_senate_gui_toggle = {
	scope = character
	
	is_shown = {
		exists = this
		has_variable = am_institutions_senate_gui_toggle
	}

	effect = {
		if = {
			limit = {
				has_variable = am_institutions_senate_gui_toggle
			}
			remove_variable = am_institutions_senate_gui_toggle
		}
		else = {
			set_variable = am_institutions_senate_gui_toggle
		}
	}
}

## Close Senate Window
am_institutions_senate_gui_close = {
	scope = character
	
	is_shown = {
		exists = this
		always = yes
	}

	effect = {
		remove_variable = am_institutions_senate_gui_toggle
		## probablement remplacer ici une commande pour trouver les leader des institutions (scoper sur le holder de l'empire, ses vassaux/courtier qui ont tel ou tel  character flag et leur retier le flag
		## title:e_byzantium.holder = { random_vassal = { limit { has_variable = army_leader } remove_variable = army_leader } }
	}
}

## Toggle Army Window
am_institutions_army_gui_toggle = {
	scope = character
	
	is_shown = {
		exists = this
		has_variable = am_institutions_army_gui_toggle
	}

	effect = {
		if = {
			limit = {
				has_variable = am_institutions_army_gui_toggle
			}
			remove_variable = am_institutions_army_gui_toggle
		}
		else = {
			set_variable = am_institutions_army_gui_toggle
		}
	}
}

## Close Army Window
am_institutions_army_gui_close = {
	scope = character
	
	is_shown = {
		exists = this
		always = yes
	}

	effect = {
		remove_variable = am_institutions_army_gui_toggle
		## probablement remplacer ici une commande pour trouver les leader des institutions (scoper sur le holder de l'empire, ses vassaux/courtier qui ont tel ou tel  character flag et leur retier le flag
		## title:e_byzantium.holder = { random_vassal = { limit { has_variable = army_leader } remove_variable = army_leader } }
	}
}

## Toggle administration Window
am_institutions_administration_gui_toggle = {
	scope = character
	
	is_shown = {
		exists = this
		has_variable = am_institutions_administration_gui_toggle
	}

	effect = {
		if = {
			limit = {
				has_variable = am_institutions_administration_gui_toggle
			}
			remove_variable = am_institutions_administration_gui_toggle
		}
		else = {
			set_variable = am_institutions_administration_gui_toggle
		}
	}
}

## Close administration Window
am_institutions_administration_gui_close = {
	scope = character
	
	is_shown = {
		exists = this
		always = yes
	}

	effect = {
		remove_variable = am_institutions_administration_gui_toggle
		## probablement remplacer ici une commande pour trouver les leader des institutions (scoper sur le holder de l'empire, ses vassaux/courtier qui ont tel ou tel  character flag et leur retier le flag
		## title:e_byzantium.holder = { random_vassal = { limit { has_variable = administration_leader } remove_variable = administration_leader } }
	}
}


#############################################
# OTHER INSTITUTION SCRIPTED GUI			#
#############################################
## CONDITIONAL SCRIPTED GUI TO DETERMINE WHAT INSTITUTIONS YOU CAN SEE

## Checks for the gui file if you are the roman emperor
am_councillor_is_roman_emperor = {
	scope = character

	is_shown = {
		primary_title = {
			this = title:e_byzantium
		}
	}
}

am_councillor_not_roman_emperor = {
	scope = character

	is_shown = {
		primary_title = {
			NOT = {
				this = title:e_byzantium
			}			
		}
	}
}

## Checks for the gui file to see if you can have no institutions
am_institutions_has_no_institutions = {
	scope = character

	is_shown = {
		exists = this
		NOR = {
			primary_title = {
				this = title:e_byzantium
			}
			any_liege_or_above = {
				primary_title = {
					this = title:e_byzantium
				}
			}
		}
	}
}

#############################################
# SENATE INSTITUTION SCRIPTED GUI			#
#############################################
## Trigger Check for the gui file to see if you can see the senate
am_institutions_roman_administration_can_see_senate = {
	scope = character

	is_shown = {
		exists = this
		OR = {
			primary_title = {
				this = title:e_byzantium
			}
			any_liege_or_above = {
				primary_title = {
					this = title:e_byzantium
				}
			}
		}
	}
}

## Create the senator variable list when you click on a gui button to display the senators visually
## Also creates the approval rating list of people depending on their opinion for the visual display
am_institutions_roman_administration_get_senator_list = {
	scope = character
	
	effect = {
		if = {
			limit = {
				root = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			## Clear variable always before
			clear_variable_list = list_roman_administration_senators


			## Add all the duchy tier vassals to the senate
			every_vassal = {
				limit = {
					highest_held_title_tier >= tier_county
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_senators
						target = prev
					}
				}				
			}
			## Put the senators who like you into a specific list
			every_vassal = {
				limit = {
					highest_held_title_tier = tier_duchy
					opinion = {
						target = root
						value >= 0
					}
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_supportive_senators
						target = prev
					}
				}
			}

		}
		if = {
			limit = {
				root = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}	
					any_liege_or_above = {
						primary_title = {
							this = title:e_byzantium
						}
					}				
				}				
			}
			title:e_byzantium.holder = {
				## Clear variable always before
				clear_variable_list = list_roman_administration_senators

				every_vassal = {
					limit = {
						highest_held_title_tier >= tier_county
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_senators
							target = prev
						}
					}					
				}
				## Put the senators who like you into a specific list
				every_vassal = {
					limit = {
						highest_held_title_tier = tier_duchy
						opinion = {
							target = root
							value >= 0
						}
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_supportive_senators
							target = prev
						}
					}
				}
			}
		}
	}

}

## Trigger for the text of relevance of the senate
am_institutions_roman_administration_senate_political_relevance_irrelevant = {
	scope = character

	is_shown = {
		exists = this
		root = {
			title:e_byzantium = {
				has_variable = roman_administration_senate_political_relevance_irrelevant
			}
		}		
	}
}
am_institutions_roman_administration_senate_political_relevance_medium = {
	scope = character

	is_shown = {
		exists = this
		root = {
			title:e_byzantium = {
				has_variable = roman_administration_senate_political_relevance_medium
			}
		}
		
	}
}
am_institutions_roman_administration_senate_political_relevance_high = {
	scope = character

	is_shown = {
		exists = this
		root = {
			title:e_byzantium = {
				has_variable = roman_administration_senate_political_relevance_high
			}
		}		
	}
}


#############################################
# ROMAN ARMY INSTITUTION SCRIPTED GUI		#
#############################################

### ARMY RELATED SCRIPTED GUI
## Trigger Check for the gui file to see if you can see the roman army institution
am_institutions_roman_administration_can_see_roman_army = {
	scope = character

	is_shown = {
		exists = this
		OR = {
			primary_title = {
				this = title:e_byzantium
			}
			any_liege_or_above = {
				primary_title = {
					this = title:e_byzantium
				}
			}
		}
	}
}

## Create the military officials variable list when you click on a gui button to display the military visually
am_institutions_roman_administration_get_military_officials_list = {
	scope = character
	
	effect = {
		if = {
			limit = {
				root = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			## Clear variable always before
			clear_variable_list = list_roman_administration_military_officials
			clear_variable_list = list_roman_administration_military_officials_minus_high_officials
			clear_variable_list = list_roman_administration_imperial_tagma_officials

			## All the military officials
			every_vassal = {
				limit = {
					roman_administration_holds_military_title_trigger = yes
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_military_officials
						target = prev
					}
				}				
			}
			## provincial military officials
			every_vassal = {
				limit = {
					#roman_administration_holds_military_title_trigger = yes
					OR = {
						roman_administration_holds_doukaton_title_trigger = yes
						roman_administration_holds_strategos_title_trigger = yes
					}
					
					roman_administration_holds_tagma_title_trigger = no
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_military_officials_minus_high_officials
						target = prev
					}
				}				
			}
			## Only Imperial Tagma officials
			every_vassal = {
				limit = {
					roman_administration_holds_tagma_title_trigger = yes
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_imperial_tagma_officials
						target = prev
					}
				}				
			}
		}
		if = {
			limit = {
				root = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}	
					any_liege_or_above = {
						primary_title = {
							this = title:e_byzantium
						}
					}				
				}				
			}
			title:e_byzantium.holder = {
				## Clear variable always before
				clear_variable_list = list_roman_administration_military_officials
				clear_variable_list = list_roman_administration_military_officials_minus_high_officials
				clear_variable_list = list_roman_administration_imperial_tagma_officials

				## All the military officials
				every_vassal = {
					limit = {
						roman_administration_holds_military_title_trigger = yes
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_military_officials
							target = prev
						}
					}				
				}
				## provincial military officials
				every_vassal = {
					limit = {
						#roman_administration_holds_military_title_trigger = yes
						OR = {
							roman_administration_holds_doukaton_title_trigger = yes
							roman_administration_holds_strategos_title_trigger = yes
						}
						roman_administration_holds_tagma_title_trigger = no
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_military_officials_minus_high_officials
							target = prev
						}
					}				
				}
				## Only Imperial Tagma officials
				every_vassal = {
					limit = {
						roman_administration_holds_tagma_title_trigger = yes
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_imperial_tagma_officials
							target = prev
						}
					}				
				}
			}
		}
	}

}

## Create the High Military officials variable list when you click on a gui button to display the military visually
am_institutions_roman_administration_get_military_high_officials_list = {
	scope = character
	
	effect = {
		if = {
			limit = {
				root = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			## Clear variable always before
			clear_variable_list = list_roman_administration_imperial_tagma_officials

			every_vassal = {
				limit = {
					roman_administration_holds_tagma_title_trigger = yes
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_imperial_tagma_officials
						target = prev
					}
				}				
			}
			every_vassal = {
				limit = {
					roman_administration_holds_tagma_title_trigger = yes
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_imperial_tagma_officials
						target = prev
					}
				}				
			}
		}
		if = {
			limit = {
				root = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}	
					any_liege_or_above = {
						primary_title = {
							this = title:e_byzantium
						}
					}				
				}				
			}
			title:e_byzantium.holder = {
				## Clear variable always before
				clear_variable_list = list_roman_administration_imperial_tagma_officials

				every_vassal = {
					limit = {
						roman_administration_holds_tagma_title_trigger = yes
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_imperial_tagma_officials
							target = prev
						}
					}					
				}
				every_vassal = {
					limit = {
						roman_administration_holds_tagma_title_trigger = yes
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_imperial_tagma_officials
							target = prev
						}
					}				
				}
			}
		}
	}

}

#############################################
# ROMAN ADMIN INSTITUTION SCRIPTED GUI		#
#############################################

## Trigger Check for the gui file to see if you can see the roman army institution
am_institutions_roman_administration_can_see_roman_administration = {
	scope = character

	is_shown = {
		exists = this
		OR = {
			primary_title = {
				this = title:e_byzantium
			}
			any_liege_or_above = {
				primary_title = {
					this = title:e_byzantium
				}
			}
		}
	}
}

## Create the administrative officials variable list when you click on a gui button to display the administrative visually
am_institutions_roman_administration_get_administrative_officials_list = {
	scope = character
	
	effect = {
		if = {
			limit = {
				root = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			## Clear variable always before
			clear_variable_list = list_roman_administration_administrative_officials
			clear_variable_list = list_roman_administration_administrative_officials_minus_high_officials
			clear_variable_list = list_roman_administration_high_administration_officials

			## All the administrative officials
			every_vassal = {
				limit = {
					roman_administration_holds_military_title_trigger = no
					highest_held_title_tier >= tier_duchy
					NOT = { has_government = theocracy_government }
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_administrative_officials
						target = prev
					}
				}				
			}
			## provincial administrative officials
			every_vassal = {
				limit = {
					roman_administration_holds_military_title_trigger = no
					roman_administration_holds_high_administration_title_trigger = no
					highest_held_title_tier >= tier_duchy
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_administrative_officials_minus_high_officials
						target = prev
					}
				}				
			}
			## Only High Administration officials
			every_vassal = {
				limit = {
					roman_administration_holds_high_administration_title_trigger = yes
				}
				root = {
					add_to_variable_list = {
						name = list_roman_administration_high_administration_officials
						target = prev
					}
				}				
			}
		}
		if = {
			limit = {
				root = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}	
					any_liege_or_above = {
						primary_title = {
							this = title:e_byzantium
						}
					}				
				}				
			}
			

			title:e_byzantium.holder = {
				## Clear variable always before
				clear_variable_list = list_roman_administration_administrative_officials
				clear_variable_list = list_roman_administration_administrative_officials_minus_high_officials
				clear_variable_list = list_roman_administration_high_administration_officials

				## All the administrative officials
				every_vassal = {
					limit = {
						roman_administration_holds_military_title_trigger = no
						highest_held_title_tier >= tier_duchy
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_administrative_officials
							target = prev
						}
					}				
				}
				## provincial administrative officials
				every_vassal = {
					limit = {
						roman_administration_holds_military_title_trigger = no
						roman_administration_holds_high_administration_title_trigger = no
						highest_held_title_tier >= tier_duchy
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_administrative_officials_minus_high_officials
							target = prev
						}
					}				
				}
				## Only High Administration officials
				every_vassal = {
					limit = {
						roman_administration_holds_high_administration_title_trigger = yes
					}
					root = {
						add_to_variable_list = {
							name = list_roman_administration_high_administration_officials
							target = prev
						}
					}				
				}
			}
		}
	}

}

#############################################
# LEGITIMACY & POPULARITY SCRIPTED GUI		#
#############################################

### LEGITIMACY AND POPULARITY RELATED SCRIPTED GUI
am_roman_administration_has_popularity = {
	scope = character

	is_shown = {
		exists = this
		has_variable = roman_administration_popularity
	}
}

am_roman_administration_has_legitimacy = {
	scope = character

	is_shown = {
		exists = this
		has_variable = roman_administration_legitimacy		
	}
}


## ORC GUI TO DISPLAY DISTANCE TO CAPITAL
# am_orc_county_distance_to_capital = {
# 	set_variable = { 
# 		name = am_orc_county_distance_to_capital_info
# 		value = var:am_comm_malus_to_capital
# 	}
# }


#############################################
# ORC SCRIPTED GUI							#
#############################################

am_orc_comm_malus_capital_update = {
	scope = character

	effect = {
		root = {
			if = {
				limit = {
					is_landed = yes
				}
				orc_apply_demesne_provinces_distance_malus = yes
			}
		}
		
	}
	
}