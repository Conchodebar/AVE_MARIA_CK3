#####################################################################
#
#  This file contains various scripted effects for comparing the  personalities of different characters, in order to generate more
#  believable character interactions (e.g., ensuring a Brave character would prefer to insult their rival for being Craven over
#  insulting them for a non-opposing personality trait).
#
#  Also see the '00_personality_trait_triggers.txt' file when using these in an event.

#####################################################################
#
#	check_if_chars_have_opposing_traits_effect:
#	 This scripted effect is for determining if two characters have opposing personality traits.
#	 If they do, it applies a parameterized flag to the 1st character for future usage in event scripts and localisation.
#
#	Parameters:
#	 CHAR1 - The primary character we want to compare the traits of, and the one who all flags will be applied to
#	 CHAR2 - The secondary character we are comparing to CHAR1
#	 TRAIT1 - The trait we are looking for on CHAR1
#	 TRAIT2 - Should always be set to the opposite trait of TRAIT1
#	 FLAG_PREFIX - The first half of the name the flag we will apply to CHAR1, i.e. "statecraft_progress_2200"
#	 FLAG_POSTFIX - The second half of the name the flag we will apply to CHAR1, i.e. "brave"
#	 SUCCESS_FLAG - A unique flag identifier indicating if this effect has successfully found a valid set of opposing traits on thew characters.
#	 STRICT - A boolean (yes/no) indicating if we should do the fallback check for only TRAIT1 on CHAR1 if CHAR1 and CHAR2 have no opposing traits at all
#		-This is useful if you simply want to ensure the characters do not share the specified trait(i.e., one Brave char insulting another char for being Brave).
#
#	By Sean Hughes

personality_check_if_chars_have_opposing_traits_effect = {
	$CHAR1$ = {
		if = {
			limit = {
				number_of_opposing_traits = {
					target = $CHAR2$
					value >= 1
				}
			}
			if = {
				#If CHAR1 and CHAR2 have these opposite traits, CHAR1 gets the appropriate flags added to them.
				limit = {
					has_trait = $TRAIT1$
					$CHAR2$ = {
						has_trait = $TRAIT2$
					}
				}
				save_scope_value_as = {
					name = $FLAG_PREFIX$
					value = flag:$FLAG_POSTFIX$
				}
				save_scope_value_as = {
					name = $FLAG_SUCCESS$
					value = yes
				}
			}
		}
		else = {
			if = {
				#Fallback option if the two characters have no opposing traits at all.
				limit = {
					#If we are strictly looking for only opposite traits, do not do this step.
					$STRICT$ = no

					#Otherwise, simply find a trait that CHAR1 has which CHAR2 does not, then add the appropriate flag to CHAR1.
					has_trait = $TRAIT1$
					$CHAR2$ = {
						NOT = { has_trait = $TRAIT1$ }
					}
				}
				save_scope_value_as = {
					name = $FLAG_PREFIX$
					value = flag:$FLAG_POSTFIX$
				}
				save_scope_value_as = {
					name = flag:$FLAG_SUCCESS$
					value = yes
				}
			}
		}
	}
}

#####################################################################
#
#	check_opposing_bad_ruler_traits_effect:
#	 This scripted effect uses the above effect to determine which trait a vassal would most dispise in their ruler.
#	 It was created for statecraft_progress.2200, but should be able to be used in any other event without an issue,
#	 as long as each event which uses this has NOT = {scope:opposing_trait_flag_applied = yes} in a trigger.
#
#	Parameters:
#	 CHAR1 - The primary character we want to compare the traits of (the ruler/heir/potential ruler)
#	 CHAR2 - The secondary character we are comparing to CHAR1 (the vassal/potential vassal)
#	 TRAIT1 - The trait we are looking for on CHAR1
#	 TRAIT2 - Should always be set to the opposite trait of TRAIT1
#	 STRICT - A boolean (yes/no) indicating if we should do the fallback check for only TRAIT1 on CHAR1 if CHAR1 and CHAR2 have no opposing traits at all
#		-This is useful if you simply want to ensure the characters do not share the specified trait(i.e., one Brave char insulting another char for being Brave).
#
#	By Sean Hughes

personality_check_opposing_bad_ruler_traits_effect = {
	save_scope_value_as = {
		name = opposing_trait_flag_applied
		value = no
	}
	save_scope_value_as = {
		name = has_opposing_trait
		value = flag:none
	}
	#The first 11 trait pairings are selected from "Bad Ruler" traits, which vassals either dislike more than other traits or directly hurt diplomacy.
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_inconstant
			TRAIT2 = am_just
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_inconstant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_craven
			TRAIT2 = am_brave
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_craven
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = sadistic
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = sadistic
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_lazy
			TRAIT2 = am_diligent
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_lazy
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_stubborn
			TRAIT2 = am_inconstant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_stubborn
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_fearful
			TRAIT2 = am_mild
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_fearful
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_quarrelsome
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_quarrelsome
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_deceitful
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_deceitful
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_wroth
			TRAIT2 = am_patient
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_wroth
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_pretentious
			TRAIT2 = am_humble
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_pretentious
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_withdrawn
			TRAIT2 = am_outgoing
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_withdrawn
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	# The next 14 traits are neutral traits, which aren't considered "Bad Ruler" traits but an individual CHAR2 may dislike.
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_hypocritical
			TRAIT2 = am_intolerant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_hypocritical
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_intolerant
			TRAIT2 = am_hypocritical
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_intolerant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_deceitful
			TRAIT2 = am_honest
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_deceitful
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_honest
			TRAIT2 = am_deceitful
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_honest
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_generous
			TRAIT2 = am_greedy
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_generous
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_greedy
			TRAIT2 = am_generous
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_greedy
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = gluttonous
			TRAIT2 = temperate
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = gluttonous
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = temperate
			TRAIT2 = gluttonous
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = temperate
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_illtempered
			TRAIT2 = am_patient
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_illtempered
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_patient
			TRAIT2 = am_illtempered
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_patient
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = lustful
			TRAIT2 = chaste
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = lustful
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = chaste
			TRAIT2 = lustful
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = chaste
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_conventional
			TRAIT2 = ambitious
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_conventional
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = ambitious
			TRAIT2 = am_conventional
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = ambitious
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	#The last 11 traits are opposites of the "Bad Ruler" traits, I.E., things the player is unlikely to want tCHAR1 CHAR1 to lose.
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_outgoing
			TRAIT2 = am_withdrawn
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_outgoing
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_diligent
			TRAIT2 = am_lazy
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_diligent
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_humble
			TRAIT2 = am_pretentious
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_humble
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_brave
			TRAIT2 = am_craven
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_brave
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_patient
			TRAIT2 = am_wroth
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_patient
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_intolerant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_deceitful
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_inconstant
			TRAIT2 = am_stubborn
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_inconstant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_quarrelsome
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_mild
			TRAIT2 = am_fearful
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_mild
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:opposing_trait_flag_applied = yes } }
		personality_check_if_chars_have_opposing_traits_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_just
			TRAIT2 = am_inconstant
			FLAG_PREFIX = has_opposing_trait
			FLAG_POSTFIX = am_just
			FLAG_SUCCESS = opposing_trait_flag_applied
			STRICT = $STRICT$
		}
	}
}

#####################################################################
#
#	personality_minor_shift_effect:
#	 Designed to be used in tandem with 'check_opposing_bad_ruler_traits_effect', but can be used with other scripts.
#	 Checks if a character has the specified flag and, if so, removes the corresponding personality trait.
#
#	By Sean Hughes

personality_shift_effect = {
	if = {
		limit = { scope:has_opposing_trait = flag:arrogant }
		remove_trait = am_pretentious
		add_trait_force_tooltip = am_humble
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:humble }
		remove_trait = am_humble
		add_trait_force_tooltip = am_pretentious
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:lustful }
		remove_trait = lustful
		add_trait_force_tooltip = chaste
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:chaste }
		remove_trait = chaste
		add_trait_force_tooltip = lustful
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:gregarious }
		remove_trait = am_outgoing
		add_trait_force_tooltip = am_withdrawn
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:shy }
		remove_trait = am_withdrawn
		add_trait_force_tooltip = am_outgoing
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:generous }
		remove_trait = am_generous
		add_trait_force_tooltip = am_greedy
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:greedy }
		remove_trait = am_greedy
		add_trait_force_tooltip = am_generous
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:ambitious }
		remove_trait = ambitious
		add_trait_force_tooltip = am_conventional
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:content }
		remove_trait = am_conventional
		add_trait_force_tooltip = ambitious
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:impatient }
		remove_trait = am_illtempered
		add_trait_force_tooltip = am_patient
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:patient }
		remove_trait = am_patient
		add_trait_force_tooltip = am_illtempered
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:temperate }
		remove_trait = temperate
		add_trait_force_tooltip = gluttonous
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:gluttonous }
		remove_trait = gluttonous
		add_trait_force_tooltip = temperate
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:diligent }
		remove_trait = am_diligent
		add_trait_force_tooltip = am_lazy
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:lazy }
		remove_trait = am_lazy
		add_trait_force_tooltip = am_diligent
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:wrathful }
		remove_trait = am_wroth
		add_trait_force_tooltip = am_patient
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:calm }
		remove_trait = am_patient
		add_trait_force_tooltip = am_wroth
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:deceitful }
		remove_trait = am_deceitful
		add_trait_force_tooltip = am_honest
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:honest }
		remove_trait = am_honest
		add_trait_force_tooltip = am_deceitful
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:craven }
		remove_trait = am_craven
		add_trait_force_tooltip = am_brave
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:brave }
		remove_trait = am_brave
		add_trait_force_tooltip = am_craven
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:arbitrary }
		remove_trait = am_inconstant
		add_trait_force_tooltip = am_just
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:just }
		remove_trait = am_honest
		add_trait_force_tooltip = am_inconstant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:cynical }
		remove_trait = am_hypocritical
		add_trait_force_tooltip = am_intolerant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:zealous }
		remove_trait = am_intolerant
		add_trait_force_tooltip = am_hypocritical
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:paranoid }
		remove_trait = am_fearful
		add_trait_force_tooltip = am_mild
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:trusting }
		remove_trait = am_mild
		add_trait_force_tooltip = am_fearful
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:compassionate }
		remove_trait = am_tolerant
		add_trait_force_tooltip = am_deceitful
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:callous }
		remove_trait = am_deceitful
		add_trait_force_tooltip = am_tolerant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:sadistic }
		remove_trait = sadistic
		add_trait_force_tooltip = am_tolerant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:forgiving }
		remove_trait = am_agreeable
		add_trait_force_tooltip = am_quarrelsome
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:vengeful }
		remove_trait = am_quarrelsome
		add_trait_force_tooltip = am_tolerant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:stubborn }
		remove_trait = am_stubborn
		add_trait_force_tooltip = am_inconstant
	}
	else_if = {
		limit = { scope:has_opposing_trait = flag:fickle }
		remove_trait = am_inconstant
		add_trait_force_tooltip = am_stubborn
	}
}

#####################################################################
#
#	personality_check_if_chars_have_shared_trait_effect:
#	 This scripted effect is for determining if two characters share a personality trait.
#	 If they do, it applies a parameterized flag to the 1st character for future usage in event scripts and localisation.
#
#	Parameters:
#	 CHAR1 - The primary character we want to compare the traits of, and the one who all flags will be applied to
#	 CHAR2 - The secondary character we are comparing to CHAR1
#	 TRAIT1 - The trait we are looking for on both the characters
#	 TRAIT2 - The opposite trait of trait 1, in case we need to rely on our fallback.
#	 FLAG_PREFIX - The first half of the name the flag we will apply to CHAR1, i.e. "statecraft_progress_2200"
#	 FLAG_POSTFIX - The second half of the name the flag we will apply to CHAR1, i.e. "brave"
#	 SUCCESS_FLAG - A unique flag identifier indicating if this effect has successfully found a valid set of shared traits on the characters.
#	 STRICT - A boolean (yes/no) indicating if we should do the fallback check for CHAR2 not having TRAIT2 if there are no shared traits.
#
#	By Sean Hughes

personality_check_if_chars_have_shared_trait_effect = {
	$CHAR1$ = {
		if = {
			limit = {
				number_of_personality_traits_in_common = {
					target = $CHAR2$
					value >= 1
				}
			}
			if = {
				#If CHAR1 and both have this trait, set the appropriate flag.
				limit = {
					has_trait = $TRAIT1$
					$CHAR2$ = {
						has_trait = $TRAIT1$					}
				}
				save_scope_value_as = {
					name = $FLAG_PREFIX$
					value = flag:$FLAG_POSTFIX$
				}
				save_scope_value_as = {
					name = $FLAG_SUCCESS$
					value = yes
				}
			}
		}
		else = {
			if = {
				#Fallback option if the two characters have no shared traits at all.
				limit = {
					#If we are strictly looking for only shared traits, do not do this step.
					$STRICT$ = no

					#Otherwise, simply find a trait that CHAR1 has which CHAR2 does not have the opposite trait for, then add the appropriate flag to CHAR1.
					has_trait = $TRAIT1$
					$CHAR2$ = {
						NOT = { has_trait = $TRAIT2$ }
					}
				}
				save_scope_value_as = {
					name = $FLAG_PREFIX$
					value = flag:$FLAG_POSTFIX$
				}
				save_scope_value_as = {
					name = $FLAG_SUCCESS$
					value = yes
				}
			}
		}
	}
}

#####################################################################
#
#	personality_check_shared_good_ruler_traits_effect:
#	 This scripted effect uses the above effect to determine which trait a vassal would most approve of in their ruler.
#
#	Parameters:
#	 CHAR1 - The primary character we want to compare the traits of (the ruler/heir/potential ruler)
#	 CHAR2 - The secondary character we are comparing to CHAR1 (the vassal/potential vassal)
#	 TRAIT1 - The trait we are looking for on CHAR1
#	 TRAIT2 - Should always be set to the opposite trait of TRAIT1
#	 STRICT - A boolean (yes/no) indicating if we should do the fallback check for only TRAIT1 on CHAR1 if CHAR1 and CHAR2 have no opposing traits at all
#		-This is useful if you simply want to ensure the characters do not share the specified trait(i.e., one Brave char insulting another char for being Brave).
#
#	By Sean Hughes

personality_check_shared_good_ruler_traits_effect = {
	save_scope_value_as = {
		name = shared_trait_flag_applied
		value = no
	}

	#The first 11 trait pairings are selected from "Good Ruler" traits, which vassals either like more than other traits or directly help diplomacy.
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_just
			TRAIT2 = am_inconstant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_just
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_brave
			TRAIT2 = am_craven
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_brave
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_intolerant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_diligent
			TRAIT2 = am_lazy
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_diligent
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_inconstant
			TRAIT2 = am_stubborn
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_inconstant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_mild
			TRAIT2 = am_fearful
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_mild
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_quarrelsome
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_tolerant
			TRAIT2 = am_deceitful
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_tolerant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_patient
			TRAIT2 = am_wroth
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_patient
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_humble
			TRAIT2 = am_pretentious
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_humble
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_outgoing
			TRAIT2 = am_withdrawn
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_outgoing
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	# The next 14 traits are neutral traits, which aren't considered "Good Ruler" traits but an individual CHAR2 may dislike.
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_hypocritical
			TRAIT2 = am_intolerant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_hypocritical
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_intolerant
			TRAIT2 = am_hypocritical
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_intolerant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_deceitful
			TRAIT2 = am_honest
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_deceitful
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_honest
			TRAIT2 = am_deceitful
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_honest
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_generous
			TRAIT2 = am_greedy
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_generous
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_greedy
			TRAIT2 = am_generous
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_greedy
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = gluttonous
			TRAIT2 = temperate
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = gluttonous
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = temperate
			TRAIT2 = gluttonous
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = temperate
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_illtempered
			TRAIT2 = am_patient
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_illtempered
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_patient
			TRAIT2 = am_illtempered
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_patient
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = lustful
			TRAIT2 = chaste
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = lustful
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = chaste
			TRAIT2 = lustful
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = chaste
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_conventional
			TRAIT2 = ambitious
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_conventional
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = ambitious
			TRAIT2 = am_conventional
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = ambitious
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	#The last 11 traits are opposites of the "Good Ruler" traits, I.E., things CHAR2 is unlikely to appreciate unless they themselves are that way.
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_withdrawn
			TRAIT2 = am_outgoing
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_withdrawn
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_lazy
			TRAIT2 = am_diligent
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_lazy
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_pretentious
			TRAIT2 = am_humble
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_pretentious
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_craven
			TRAIT2 = am_brave
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_craven
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_wroth
			TRAIT2 = am_patient
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_wroth
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = sadistic
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = sadistic
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_deceitful
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_deceitful
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_stubborn
			TRAIT2 = am_inconstant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_stubborn
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_quarrelsome
			TRAIT2 = am_tolerant
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_quarrelsome
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_fearful
			TRAIT2 = am_mild
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_fearful
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
	if = {
		limit = { NOT = { scope:shared_trait_flag_applied = yes } }
		personality_check_if_chars_have_shared_trait_effect = {
			CHAR1 = $CHAR1$
			CHAR2 = $CHAR2$
			TRAIT1 = am_inconstant
			TRAIT2 = am_just
			FLAG_PREFIX = has_shared_trait
			FLAG_POSTFIX = am_inconstant
			FLAG_SUCCESS = shared_trait_flag_applied
			STRICT = $STRICT$
		}
	}
}