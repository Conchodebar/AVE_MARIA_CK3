# On actions for knight events, triggered automatically by the game

# Called for knights in combat every COMBAT_EVENT_DAYS days
# root is the knight
# scope:combat_side is the side of combat the knight is on
# CHARACTER is the LHS portrait, TARGET_CHARACTER is the RHS portrait

on_knight_combat_pulse = {
	events = {
		knights.0001 # Knight wounded/maimed/slain in combat.
	}
}

# Called for commanders in combat every COMBAT_EVENT_DAYS days
# root is the commander
# scope:combat_side is the side of combat the commander is on

on_commander_combat_pulse = {
	events = {
		commanders.0001 # Commander wounded/maimed/slain in combat.
	}
}

# Called for commanders when combat ends
# root is the commander
# scope:combat_side is the side of combat the commander is on
# scope:victory is whether the commander's side won

on_commander_combat_finished = {
	# trigger = {
	# 	scope:victory = no
	# }

	events = {
		# DISABLED as how this is handled is undergoing a rework.
		#commanders.0011 # Commander captured after combat.
	}

	effect = {
		if = {
			limit = {
				root = { has_variable = de_re_militari_combat_experience }
				# has_variable = de_re_militari_combat_experience
			}
			root = { change_variable = { name = de_re_militari_combat_experience add = 1 } }
			#change_variable = { name = de_re_militari_combat_experience add = 1 }
		}
		if = {
			limit = {
				root = { NOT = { has_variable = de_re_militari_combat_experience } }
				#NOT = { has_variable = de_re_militari_combat_experience }
			}
			root = {
				set_variable = { name = de_re_militari_combat_experience value = 0 }
				change_variable = { name = de_re_militari_combat_experience add = 1 }
			}
			set_variable = { name = de_re_militari_combat_experience value = 0 }
			change_variable = { name = de_re_militari_combat_experience add = 1 }
		}
	}
}

# called on every unique owner of an army on combat end
# root is the owning character
# scope:combat_side is the side of combat the commander is on
# scope:victory is whether the commander's side won
# commanders is a list of all commanders in the combat
# knights is a list of all knights in the combat
on_army_combat_finished = {
	effect = {
		every_in_list = {
			list = knights
			if = {
				limit = {
					has_variable = de_re_militari_combat_experience
				}
				change_variable = { name = de_re_militari_combat_experience add = 1 }
			}
			if = {
				limit = {
					NOT = { has_variable = de_re_militari_combat_experience }
				}
				set_variable = { name = de_re_militari_combat_experience value = 0 }
				change_variable = { name = de_re_militari_combat_experience add = 1 }
			}
		}
		every_in_list = {
			list = commanders
			if = {
				limit = {
					has_variable = de_re_militari_combat_experience
				}
				change_variable = { name = de_re_militari_combat_experience add = 1 }
			}
			if = {
				limit = {
					NOT = { has_variable = de_re_militari_combat_experience }
				}
				set_variable = { name = de_re_militari_combat_experience value = 0 }
				change_variable = { name = de_re_militari_combat_experience add = 1 }
			}
		}
		# scope:commanders = {
		# 	if = {
		# 		limit = {
		# 			has_variable = de_re_militari_combat_experience
		# 		}
		# 		change_variable = { name = de_re_militari_combat_experience add = 1 }
		# 	}
		# 	if = {
		# 		limit = {
		# 			NOT = { has_variable = de_re_militari_combat_experience }
		# 		}
		# 		set_variable = { name = de_re_militari_combat_experience value = 0 }
		# 		change_variable = { name = de_re_militari_combat_experience add = 1 }
		# 	}
		# }
		# scope:knights = {
		# 	every_in_list = {
		# 		list = 
		# 	}
		# 	if = {
		# 		limit = {
		# 			has_variable = de_re_militari_combat_experience
		# 		}
		# 		change_variable = { name = de_re_militari_combat_experience add = 1 }
		# 	}
		# 	if = {
		# 		limit = {
		# 			NOT = { has_variable = de_re_militari_combat_experience }
		# 		}
		# 		set_variable = { name = de_re_militari_combat_experience value = 0 }
		# 		change_variable = { name = de_re_militari_combat_experience add = 1 }
		# 	}
		# }
	}
	events = {
		ave_maria_de_re_militari_events.0001
	}
}

# Used for handling the Varangian guard
varangian_ongoing = {
	trigger = {
		has_character_flag = is_currently_varangian
	}
	effect = {
		#debug_log = "Fired the varangian_ongoing pulse"
		#debug_log_scopes = yes
		change_variable = { # NOTE: Will *not* be relevant to non-delayed trigger evaluations for the events below
			name = years_as_varangian
			add = 1
		}
		trigger_event = {
			on_action = varangian_ongoing
			days = { 340 380 }
		}
	}
	random_events = {
		500 = 0
		500 = varangian.1001 # Return home
		100 = varangian.2001 # Become Best Friends with another Varangian
		100 = varangian.2002 # Become Lover with another Varangian
		100 = varangian.2003 # Become Friends with a local ruler
		100 = varangian.2004 # Become Rival with a local ruler
		300 = varangian.2005 # Marry Lover
		100 = varangian.2008 # Get wounded
		100 = varangian.2011 # Get local Lover
		200 = varangian.2012 # Increase Prowess
		200 = varangian.2013 # Increase Martial
		200 = varangian.2014 # Increase Learning
		200 = varangian.2015 # Increase Diplomacy
		50 = varangian.2016 # Become Brave
		50 = varangian.2017 # Become Ambitious
		50 = varangian.2018 # Become Diligent
	}
}
