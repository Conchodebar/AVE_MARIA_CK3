# On actions for war events, triggered automatically by the game

# called for wars after being transferred to a new defender
# root is the primary attacker
# scope:war is the war
# scope:defender is the new defender

on_war_transferred = {
	events = {
		war_event.2001 # allows attacker to back out of the war
	}
}

# called for people joining as a secondary attacker or defender
# root is the joiner
# scope:war is the war

on_join_war_as_secondary = {
	events = {
		war_event.3000 # Ally gets mad if you do not participate in their wars.
	}
}

# called when a war is started.
# same scopes are available in these events as in the CBs' on_declaration, this just fires for all CBs instead of a specific CB.

on_war_started = {
	effect = {
		scope:attacker = {
			if = {
				limit = {
					any_vassal_or_below = { is_ai = no }
				}
				every_vassal_or_below = {
					limit = { is_ai = no }
					send_interface_toast = {
						type = msg_war_declared_by_liege
						title = msg_war_declared_by_liege
						desc = msg_war_declared_by_liege_desc
						left_icon = scope:attacker
						right_icon = scope:defender
					}
				}
			}
		}
		scope:defender = {
			if = {
				limit = {
					any_vassal_or_below = { is_ai = no }
				}
				every_vassal_or_below = {
					limit = { is_ai = no }
					send_interface_toast = {
						type = msg_war_declared_on_liege
						title = msg_war_declared_on_liege
						desc = msg_war_declared_on_liege_desc
						left_icon = scope:defender
						right_icon = scope:attacker
					}
				}
			}
		}


		### AVE MARIA ROMAN ADMINISTRATION
		## Local Military Commanders and Central Tagma automatically join defensive the war of the emperor
		scope:defender = {
			if = {
				limit = {
					primary_title = {
						this = title:e_byzantium
					}					
				}
				save_scope_as = basileus

				scope:war = {
					save_scope_as = war_to_join
					casus_belli = {
						random_target_title = {
							save_scope_as = war_title
						}								
					}
				}
				scope:defender = {
					every_vassal = {
						if = {
							limit = {
								OR = {
									has_government = roman_administration_doukaton_government
									has_government = roman_administration_theme_government
									has_government = roman_administration_military_government
								}
								
							}
							save_scope_as = tagma_commander
						}
					}
					## Provincial Commanders
					every_vassal = {
						if = {
							limit = {
								OR = {
									has_government = roman_administration_doukaton_government
									has_government = roman_administration_theme_government
								}
								primary_title = {
									scope:attacker = {
										realm_to_title_distance_squared = {
											title = prev
											value <= squared_distance_medium #250 map-pixels. Roughly one Ireland away (top to bottom).
										}
									}
								}
							}										
							scope:war = {
								add_defender = prev
							}							
						}
					}
					## Central Tagma
					every_vassal = {
						if = {
							limit = {
								has_government = roman_administration_military_government
								NOR = {
									has_title = title:d_optimatoi
									has_title = title:d_noumeroi
									has_title = title:d_megas_droungarios
								}
								NOT = { has_character_flag = mustered }
							}
							scope:war = {
								add_defender = prev
							}
							add_character_flag = mustered
							spawn_army = {
								name = "Tagma"
								# levies = 0
								men_at_arms = {
									type = cataphract
									stacks = 10
								}
								# men_at_arms = {
								# 	type = house_guard
								# 	stacks = 25
								# }
								# men_at_arms = {
								# 	type = bowmen
								# 	stacks = 10
								# }
								location = 496
								origin = 496
								save_scope_as = tagma_army
								inheritable = no
								war = scope:war_to_join
							}
						}
					}
				}
			}
		}

		## Local Military Commanders and Central Tagma automatically join Offensive the war of the emperor
		scope:attacker = {
			if = {
				limit = {
					primary_title = {
						this = title:e_byzantium
					}					
				}
				save_scope_as = basileus

				scope:war = {
					save_scope_as = war_to_join
					casus_belli = {
						random_target_title = {
							save_scope_as = war_title
						}								
					}
				}
				scope:attacker = {
					every_vassal = {
						if = {
							limit = {
								OR = {
									has_government = roman_administration_doukaton_government
									has_government = roman_administration_theme_government
									has_government = roman_administration_military_government
								}
								
							}
							save_scope_as = tagma_commander
						}
					}
					## Provincial Commanders
					every_vassal = {
						if = {
							limit = {
								OR = {
									has_government = roman_administration_doukaton_government
									has_government = roman_administration_theme_government
								}
								primary_title = {
									scope:defender = {
										realm_to_title_distance_squared = {
											title = prev
											value <= squared_distance_medium #250 map-pixels. Roughly one Ireland away (top to bottom).
										}
									}
								}
							}										
							scope:war = {
								add_attacker = prev
							}							
						}
					}
					## Central Tagma
					every_vassal = {
						if = {
							limit = {
								has_government = roman_administration_military_government
								NOR = {
									has_title = title:d_optimatoi
									has_title = title:d_noumeroi
									has_title = title:d_megas_droungarios
								}
								NOT = { has_character_flag = mustered }
							}
							scope:war = {
								add_attacker = prev
							}
							add_character_flag = mustered
							spawn_army = {
								name = "Tagma"
								# levies = 0
								men_at_arms = {
									type = cataphract
									stacks = 10
								}
								# men_at_arms = {
								# 	type = house_guard
								# 	stacks = 25
								# }
								# men_at_arms = {
								# 	type = bowmen
								# 	stacks = 10
								# }
								location = 496
								origin = 496
								save_scope_as = tagma_army
								inheritable = no
								war = scope:war_to_join
							}
						}
					}
				}
			}
		}
	}
}

# called for when a casus belli resolves in one of the following ways.
# same scopes are available in these events as in the CBs themselves, this just fires for all CBs instead of a specific CB.
# note that any events/effects fired here WILL NOT show up in the war summary tooltip; they fire at the same time as the war resolution, but are not actually part of the war resolution itself.

on_war_won_attacker = {
	# The war notifications are handled in `effect` instead of `events` due to order of operations.
	# `effect` fires on THIS tick, `events` fires on the NEXT tick, and the war gets destroyed between this tick and the next.
	effect = {
		# Save scopes for localization.
		scope:attacker = { save_scope_as = winner }
		scope:defender = { save_scope_as = loser }

		# Run scripted effect that iterates through all players and notifies them if necessary.
		notify_players_about_neighboring_war_resolution_effect = yes
		
		scope:war = {
			every_war_participant = {
				if = {
					limit = {
						is_ai = yes
						has_character_flag = delayed_cleanse
					}
					trigger_event = { id = game_rule.3 days = 1 }
				}

				## AVE MARIA ROMAN administration clear the mustered flag for the Tagma leaders
				if = {
					limit = {
						#is_at_war = no
						has_character_flag = mustered
					}
					remove_character_flag = mustered
				}			
				
				## Make you roman administration government if you won an indepdendance war
				if = {
					limit = {
						OR = {
							has_government = roman_administration_theme_government
							has_government = roman_administration_doukaton_government
							has_government = roman_administration_military_government
							has_government = roman_administration_kouratoreia_government
						}
						is_independent_ruler = yes
					}
					change_government = roman_administration_government
					add_realm_law = ave_maria_roman_administration_imperial
				}
			}
		}

		

		### AVE MARIA
		## making you roman administrative gov if you go independent
		scope:attacker = {
			if = {
				limit = {
					OR = {
						has_government = roman_administration_government
						has_government = roman_administration_military_government
						has_government = roman_administration_doukaton_government
						has_government = roman_administration_kouratoreia_government
						has_government = roman_administration_sekreton_government
					}
					is_independent_ruler = yes
				}
				change_government = roman_administration_government
				add_realm_law = ave_maria_roman_administration_imperial
			}
		}

		## Counting up victories
		if = {
			limit = {
				scope:attacker = {
					NOT = {
						has_variable = de_re_militari_war_won_counter
					}
				}
				
			}
			scope:attacker = {
				set_variable = {
					name = de_re_militari_war_won_counter
					value = 0
				}
				change_variable = {
					name = de_re_militari_war_won_counter
					add = 1
				}
			}			
		}

		## Adding legitimacy as Roman emperor
		if = {
			limit = {
				scope:attacker = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			scope:attacker = {
				roman_administration_add_legitimacy_massive_amount = yes
				roman_administration_update_total_salary_cost = yes
			}			
		}
		## Military officials gain also legitimacy
		every_war_participant = {
			if = {
				limit = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}
					top_liege = {
						primary_title = {
							this = title:e_byzantium
						}
					}
				}

				roman_administration_add_legitimacy_massive_amount = yes				
			}
		}


		## Removing Legitimacy and Popularity if you are the Emperor and lost
		if = {
			limit = {
				scope:defender = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			scope:defender = {
				roman_administration_remove_popularity_massive_amount = yes
				roman_administration_remove_legitimacy_massive_amount = yes
				roman_administration_update_total_salary_cost = yes
			}
			
		}
	}

	events = {
		
	}
}

on_war_won_defender = {
	effect = {
		# Save scopes for localization.
		scope:attacker = { save_scope_as = loser }
		scope:defender = { save_scope_as = winner }

		# Run scripted effect that iterates through all players and notifies them if necessary.
		notify_players_about_neighboring_war_resolution_effect = yes
		
		scope:war = {
			every_war_participant = {
				if = {
					limit = {
						is_ai = yes
						has_character_flag = delayed_cleanse
					}
					trigger_event = { id = game_rule.3 days = 1 }
				}

				## AVE MARIA ROMAN administration clear the mustered flag for the Tagma leaders
				if = {
					limit = {
						#is_at_war = no
						has_character_flag = mustered
					}
					remove_character_flag = mustered
				}
			}
		}


		## AVE MARIA
		## Counting up victories
		if = {
			limit = {
				scope:defender = {
					NOT = {
						has_variable = de_re_militari_war_won_counter
					}
				}
				
			}
			scope:defender = {
				set_variable = {
					name = de_re_militari_war_won_counter
					value = 0
				}
				change_variable = {
					name = de_re_militari_war_won_counter
					add = 1
				}
			}			
		}

		## Adding legitimacy as Roman emperor
		if = {
			limit = {
				scope:attacker = {
					primary_title = {
						this = title:e_byzantium
					}
				}				
			}
			roman_administration_add_legitimacy_massive_amount = yes
		}
		## Military officials gain also legitimacy
		every_war_participant = {
			if = {
				limit = {
					NOT = {
						primary_title = {
							this = title:e_byzantium
						}
					}
					top_liege = {
						primary_title = {
							this = title:e_byzantium
						}
					}
				}
				roman_administration_add_legitimacy_massive_amount = yes
			}
		}
	}

	events = {
		
	}
}

on_war_white_peace = {
	effect = {
		scope:war = {
			every_war_participant = {
				if = {
					limit = {
						is_ai = yes
						has_character_flag = delayed_cleanse
					}
					trigger_event = { id = game_rule.3 days = 1 }
				}

				## AVE MARIA ROMAN administration clear the mustered flag for the Tagma leaders
				if = {
					limit = {
						#is_at_war = no
						has_character_flag = mustered
					}
					remove_character_flag = mustered
				}
			}
		}
	}

	events = {
		
	}
}

on_war_invalidated = {
	effect = {
		scope:attacker = {
			send_interface_message = {
				type = event_war_invalidated
				title = END_WAR_INVALIDATED_MESSAGE_TITLE
				desc = END_WAR_INVALIDATED_MESSAGE_DESC
				left_icon = scope:attacker
				right_icon = scope:defender
			}
		}
		
		scope:war = {
			every_war_participant = {
				if = {
					limit = {
						is_ai = yes
						has_character_flag = delayed_cleanse
					}
					trigger_event = { id = game_rule.3 days = 1 }
				}

				## AVE MARIA ROMAN administration clear the mustered flag for the Tagma leaders
				if = {
					limit = {
						#is_at_war = no
						has_character_flag = mustered
					}
					remove_character_flag = mustered
				}
			}
		}
	}

	events = {
		
	}
}
